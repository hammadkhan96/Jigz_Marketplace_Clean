name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: jigz-app

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run check
      
    - name: Build application
      run: npm run build
      
    - name: Test Docker build
      run: |
        docker build -t jigz-app:test .
        docker run --rm -p 8080:8080 jigz-app:test &
        sleep 30
        curl -f http://localhost:8080/api/health || exit 1

  deploy:
    name: Deploy to Cloud Run
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker
      run: gcloud auth configure-docker
      
    - name: Build and Push Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 2Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --concurrency 80 \
          --timeout 300 \
          --set-env-vars NODE_ENV=production,PORT=8080
          
    - name: Update traffic
      run: |
        gcloud run services update-traffic $SERVICE_NAME \
          --region $REGION \
          --to-latest
          
    - name: Get service URL
      id: service-url
      run: |
        echo "url=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')" >> $GITHUB_OUTPUT
        
    - name: Health check
      run: |
        sleep 30
        curl -f ${{ steps.service-url.outputs.url }}/api/health || exit 1
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ **Deployment successful!**\n\nYour changes have been deployed to: ${{ steps.service-url.outputs.url }}\n\n- Commit: \`${{ github.sha }}\`\n- Environment: Production\n- Health Check: âœ… Passed`
          })
